/// <reference types ="cypress"/>
/*
AUTHOR: TrackDfect
CompanyUserSignup Scenario
steps to run the code
1.Add a newmailid(which is not Signedup already) and use same maild id  until testcase 21, whenever you need to 
  give a valid mail id according to the testcase.
2.you have to provide new mailid(which is not Signedup already)  Between 21st -35th testcase 
3.In package.json you have to change the path of the Script according to the script you are running
  for example :  "cypress run --spec 'cypress/integration/UI_Testing/Company/CompanyUserSignup.spec.js --headed"'
4.for getting html report you have to use "npm run test" command
*/
import { signuptesturl, ValidPassword, Validuseridtestcase22, Validuseridtestcase23, Validuseridtestcase24, Validuseridtestcase25, Validuseridtestcase26, Validuseridtestcase27, Validuseridtestcase28, Validuseridtestcase29, Validuseridtestcase30, Validuseridtestcase31, Validuseridtestcase32, Validuseridtestcase33, Validuseridtestcase34, Validuseridtestcase35, Validuseriduntilltestcase21 } from '../BridgeupDemo/BridgeUpConfig/signupconfig';
import SignupPage from './BridgeUpPageObj/SignupPageObj'
describe('Company- UI- SignupPage- Test Suite', () => {
    beforeEach(function () {
        cy.visit(signuptesturl);
    })
    it('Test 001:Company - UI - SignupPage - Default text Display - Testcase-Positive', () => {
        const Signup = new SignupPage()
        Signup.VerifyDefaultTextGetStartedWithBridgeUp()
        Signup.VerifyDefaultTextmandatoryfields()
        Signup.VerifyDefaultTextcompanyname()
        Signup.VerifyDefaultTextWorkEmailAddress()
        Signup.VerifyDefaultTextSetPassword()
        Signup.VerifyDefaultTextMinimum8Characters()
        Signup.VerifyDefaultTextContainsaSpecialCharacter()
        Signup.VerifyDefaultTextContainsANumber()
        Signup.VerifyDefaultTextContainsALowercaseLetter()
        Signup.VerifyDefaultTextContainsAUppercaseLetter()
        Signup.VerifyDefaultTextContainsContinue()
        Signup.VerifyDefaultTextContainsABackToLogin()                                           
        Signup.VerifyDefaultTextInvalidCompanyNameErrorNotification()
    })
    it('Test 002:Company - UI - SignupPage - CompanyNameBlank - Testcase-Negative', () => {
        const Signup = new SignupPage()
        Signup.EnterEmail(Validuseriduntilltestcase21)
        Signup.EnterPassword(ValidPassword)
        Signup.ClickContinue()
        Signup.VerifyDefaultTextInvalidCompanyNameErrorNotification()
    })
    it('Test 003:Company - UI - SignupPage - Duplicate_Signup - Testcase-Negative', () => {
        const Signup = new SignupPage()
        Signup.EnterCompanyName('BRIDGEUP TECH PRIVATE LIMITED')
        Signup.EnterEmail('prabhakaran+345@bridgeup.com')
        Signup.EnterPassword(ValidPassword)
        Signup.ClickContinue()
        Signup.VerifyUseralreadyexists()
    })
    it('Test 004:Company - UI - SignupPage - CompanyNameSpace4chr - Testcase-Negative', () => {
        const Signup = new SignupPage()
        Signup.EnterCompanyName('    ')
        Signup.EnterEmail(Validuseriduntilltestcase21)
        Signup.EnterPassword(ValidPassword)
        Signup.ClickContinue()
        Signup.VerifyDefaultTextInvalidCompanyNameErrorNotification()
     })
    it('Test 005:Company - UI - SignupPage - CompanyNamewithNumeric - Testcase-Negative', () => {
        const Signup = new SignupPage()
        Signup.EnterCompanyName('123456')
        Signup.EnterEmail(Validuseriduntilltestcase21)
        Signup.EnterPassword(ValidPassword)
        Signup.ClickContinue()
        Signup.VerifyDefaultTextInvalidCompanyNameErrorNotification()
    })
 
    it('Test 006:Company - UI - SignupPage - Emailwithout@ - Testcase-Negative', () => {
        const Signup = new SignupPage()
        Signup.EnterCompanyName('BRIDGEUP TECH PRIVATE LIMITED')
        Signup.EnterEmail('prabha.karan.com')
        Signup.EnterPassword(ValidPassword)
        Signup.ClickContinue()
        Signup.VerifyInvalidEmailAddressErrorNotification()
    })
    it('Test 007:Company - UI - SignupPage - EmailwithoutDot - Testcase-Negative', () => {
        const Signup = new SignupPage()
        Signup.EnterCompanyName('BRIDGEUP TECH PRIVATE LIMITED')
        Signup.EnterEmail('prabha@karan@bridgeup@com')
        Signup.EnterPassword(ValidPassword)
        Signup.ClickContinue()
        Signup.VerifyInvalidEmailAddressErrorNotification()
    })
    it('Test 008:Company - UI - SignupPage - EmailwithLTandGTsymbol - Testcase-Negative', () => {
        const Signup = new SignupPage()
        Signup.EnterCompanyName('BRIDGEUP TECH PRIVATE LIMITED')
        Signup.EnterEmail('Prabha<karan123@bridgeup.com>')
        Signup.EnterPassword(ValidPassword)
        Signup.ClickContinue()
        Signup.VerifyInvalidEmailAddressErrorNotification()
    })
    it('Test 009:Company - UI - SignupPage - Emailwithdoubledot - Testcase-Negative', () => {
        const Signup = new SignupPage()
        Signup.EnterCompanyName('BRIDGEUP TECH PRIVATE LIMITED')
        Signup.EnterEmail('prabha..karan123@bridgeup.com')
        Signup.EnterPassword(ValidPassword)
        Signup.ClickContinue()
        Signup.VerifyInvalidEmailAddressErrorNotification()
    })
    it('Test 010:Company - UI - SignupPage - Emailwithplaintext - Testcase-Negative', () => {
        const Signup = new SignupPage()
        Signup.EnterCompanyName('BRIDGEUP TECH PRIVATE LIMITED')
        Signup.EnterEmail('prabhakaranbridgeupcom')
        Signup.EnterPassword(ValidPassword)
        Signup.ClickContinue()
        Signup.VerifyInvalidEmailAddressErrorNotification()
    })
    it('Test 011:Company - UI - SignupPage - EmailLT8Chr - Testcase-Negative', () => {
        const Signup = new SignupPage()
        Signup.EnterCompanyName('BRIDGEUP TECH PRIVATE LIMITED')
        Signup.EnterEmail('p@b.com')
        Signup.EnterPassword(ValidPassword)
        Signup.ClickContinue()
        Signup.VerifyInvalidEmailLengthErrorNotification() 
    })
    it('Test 012:Company - UI - SignupPage - PasswordBlank - Testcase-Negative', () => {
        const Signup = new SignupPage()
        Signup.EnterCompanyName('BRIDGEUP TECH PRIVATE LIMITED')
        Signup.ClearPassword()
        Signup.EnterEmail(Validuseriduntilltestcase21)
        Signup.ClickContinue()
        Signup.VerifyDefaultTextInvalidPasswordErrorNotification()
    })
    it('Test 013:Company - UI - SignupPage - EmailwithDotandPlus - Testcase-Positive', () => {
        const Signup = new SignupPage()
        Signup.EnterCompanyName('BRIDGEUP TECH PRIVATE LIMITED')
        Signup.EnterEmail('prabha.karan+1@bridge.co.in')
        Signup.EnterPassword(ValidPassword)
        Signup.ClickContinue()
        Signup.VerifyGetToKnowYou()
    })
    it('Test 014:Company - UI - SignupPage - EmailwithHypenandUnderscore - Testcase-Positive', () => {
        const Signup = new SignupPage()
        Signup.EnterCompanyName('BRIDGEUP TECH PRIVATE LIMITED')
        Signup.EnterEmail('_____karan1@bridge-co.com')
        Signup.EnterPassword(ValidPassword)
        Signup.ClickContinue()
        Signup.VerifyGetToKnowYou()
    })
    it('Test 015:Company - UI - SignupPage - Emailwithnumber - Testcase-Positive', () => {
        const Signup = new SignupPage()
        Signup.EnterCompanyName('BRIDGEUP TECH PRIVATE LIMITED')
        Signup.EnterEmail('12345678@bridgeup.com')
        Signup.EnterPassword(ValidPassword)
        Signup.ClickContinue()
        Signup.VerifyGetToKnowYou()
    })
    it('Test 016:Company - UI - SignupPage - Passwordwith7char - Testcase-Negative', () => {
        const Signup = new SignupPage()
        Signup.EnterCompanyName('BRIDGEUP TECH PRIVATE LIMITED')
        Signup.EnterEmail(Validuseriduntilltestcase21)
        Signup.EnterPassword('Prab@12') 
        Signup.ClickContinue()
        Signup.VerifyDefaultTextInvalidPasswordErrorNotification()
    })
    it('Test 017:Company - UI - SignupPage - PasswordwithoutSPLchar - Testcase-Negative', () => {
        const Signup = new SignupPage()
        Signup.EnterCompanyName('BRIDGEUP TECH PRIVATE LIMITED')
        Signup.EnterEmail(Validuseriduntilltestcase21)
        Signup.EnterPassword('Praba123') 
        Signup.ClickContinue()
        Signup.VerifyDefaultTextInvalidPasswordErrorNotification()
    })
    it('Test 018:Company - UI - SignupPage - PasswordwithoutSPLchar - Testcase-Negative', () => {
        const Signup = new SignupPage()
        Signup.EnterCompanyName('BRIDGEUP TECH PRIVATE LIMITED')
        Signup.EnterEmail(Validuseriduntilltestcase21)
        Signup.EnterPassword('Praba123') 
        Signup.ClickContinue()
        Signup.VerifyDefaultTextInvalidPasswordErrorNotification()
    })
    it('Test 019:Company - UI - SignupPage - PasswordwithoutCAPS - Testcase-Negative', () => {
        const Signup = new SignupPage()
        Signup.EnterCompanyName('BRIDGEUP TECH PRIVATE LIMITED')
        Signup.EnterEmail(Validuseriduntilltestcase21)
        Signup.EnterPassword('admin123') 
        Signup.ClickContinue()
        Signup.VerifyDefaultTextInvalidPasswordErrorNotification()
    })
    it('Test 020:Company - UI - SignupPage - PasswordwithoutNBR - Testcase-Negative', () => {
        const Signup = new SignupPage()
        Signup.EnterCompanyName('BRIDGEUP TECH PRIVATE LIMITED')
        Signup.EnterEmail(Validuseriduntilltestcase21)
        Signup.EnterPassword('prabha@kar') 
        Signup.ClickContinue()
        Signup.VerifyDefaultTextInvalidPasswordErrorNotification()
    })
    it('Test 021:Company - UI - SignupPage - Passwordwithspace9char - Testcase-Negative', () => {
        const Signup = new SignupPage()
        Signup.EnterCompanyName(Validuseriduntilltestcase21)
        Signup.EnterEmail('prabhakaran+512@bridgeup.com')
        Signup.EnterPassword('          ') 
        Signup.ClickContinue()
        Signup.VerifyDefaultTextInvalidPasswordErrorNotification()
    })
    it('Test 022:Company - UI - SignupPage - FisrtNameWithBlank - Testcase-Negative', () => {
        const Signup = new SignupPage()
        Signup.EnterCompanyName('BRIDGEUP TECH PRIVATE LIMITED')
        Signup.EnterEmail(Validuseridtestcase22)
        Signup.EnterPassword(ValidPassword) 
        Signup.ClickContinue()
        Signup.EnterLastName('TESTING')
        Signup.EnterDesignation('testing')
        Signup.EnterPhonenumber('916381794677')
        Signup.CheckIAccept()
        Signup.ClickSignUp()
        Signup.VerifyInvalidFirstName()
    })
    it('Test 023:Company - UI - SignupPage - FisrtNameWithNumber - Testcase-Negative', () => {
        const Signup = new SignupPage()
        Signup.EnterCompanyName('BRIDGEUP TECH PRIVATE LIMITED')
        Signup.EnterEmail(Validuseridtestcase23)
        Signup.EnterPassword(ValidPassword) 
        Signup.ClickContinue()
        Signup.EnterFirstName('1234')
        Signup.EnterLastName('TESTING')
        Signup.EnterDesignation('testing')
        Signup.EnterPhonenumber('916381794677')
        Signup.CheckIAccept()
        Signup.ClickSignUp()
        Signup.VerifyInvalidFirstName()
    })
    it('Test 024:Company - UI - SignupPage - FisrtNamewithSPLchar - Testcase-Negative', () => {
        const Signup = new SignupPage()
        Signup.EnterCompanyName('BRIDGEUP TECH PRIVATE LIMITED')
        Signup.EnterEmail(Validuseridtestcase24)
        Signup.EnterPassword(ValidPassword) 
        Signup.ClickContinue()
        Signup.EnterFirstName('BRIDGEUP$12&')
        Signup.EnterLastName('TESTING')
        Signup.EnterDesignation('testing')
        Signup.EnterPhonenumber('916381794677')
        Signup.CheckIAccept()
        Signup.ClickSignUp()
        Signup.VerifyInvalidFirstName()
    })
    it('Test 025:Company - UI - SignupPage - LastNameBlank - Testcase-Negative', () => {
        const Signup = new SignupPage()
        Signup.EnterCompanyName('BRIDGEUP TECH PRIVATE LIMITED')
        Signup.EnterEmail(Validuseridtestcase25)
        Signup.EnterPassword(ValidPassword) 
        Signup.ClickContinue()
        Signup.EnterFirstName('BRIDGEUP')
        Signup.ClearLastName()
        Signup.EnterDesignation('testing')
        Signup.EnterPhonenumber('916381794677')
        Signup.CheckIAccept()
        Signup.ClickSignUp()
        Signup.VerifyInvalidLastName()
    })
    it('Test 026:Company - UI - SignupPage - LastNamewithSpace4Char - Testcase-Negative', () => {
        const Signup = new SignupPage()
        Signup.EnterCompanyName('BRIDGEUP TECH PRIVATE LIMITED')
        Signup.EnterEmail(Validuseridtestcase26)
        Signup.EnterPassword(ValidPassword)
        Signup.ClickContinue()
        Signup.EnterFirstName('BRIDGEUP')
        Signup.EnterLastName('    ')
        Signup.EnterDesignation('testing')
        Signup.EnterPhonenumber('916381794677')
        Signup.CheckIAccept()
        Signup.ClickSignUp()
        Signup.VerifyInvalidLastName()
    })
    it('Test 027:Company - UI - SignupPage - LastNamewithoutText - Testcase-Negative', () => {
        const Signup = new SignupPage()
        Signup.EnterCompanyName('BRIDGEUP TECH PRIVATE LIMITED')
        Signup.EnterEmail(Validuseridtestcase27)
        Signup.EnterPassword(ValidPassword) 
        Signup.ClickContinue()
        Signup.EnterFirstName('BRIDGEUP') 
        Signup.EnterLastName('123456')
        Signup.EnterDesignation('testing')
        Signup.EnterPhonenumber('916381794677')
        Signup.CheckIAccept()
        Signup.ClickSignUp()
        Signup.VerifyInvalidLastName()
    })
    it('Test 028:Company - UI - SignupPage - LastNamewithSPLchr - Testcase-Negative', () => {
        const Signup = new SignupPage()
        Signup.EnterCompanyName('BRIDGEUP TECH PRIVATE LIMITED')
        Signup.EnterEmail(Validuseridtestcase28)
        Signup.EnterPassword(ValidPassword) 
        Signup.ClickContinue()
        Signup.EnterFirstName('BRIDGEUP') 
        Signup.EnterLastName('TESTING$12&')
        Signup.EnterDesignation('testing')
        Signup.EnterPhonenumber('916381794677')
        Signup.CheckIAccept()
        Signup.ClickSignUp()
        Signup.VerifyInvalidLastName()
    })
    it('Test 029:Company - UI - SignupPage - MobileNumberBlank - Testcase-Negative', () => {
        const Signup = new SignupPage()
        Signup.EnterCompanyName('BRIDGEUP TECH PRIVATE LIMITED')
        Signup.EnterEmail(Validuseridtestcase29)
        Signup.EnterPassword(ValidPassword) 
        Signup.ClickContinue()
        Signup.EnterFirstName('BRIDGEUP') 
        Signup.EnterLastName('TESTING')
        Signup.ClearPhonenumber()
        Signup.EnterDesignation('Aoto$12&')
        Signup.CheckIAccept()
        Signup.ClickSignUp()
        Signup.VerifyInvalidPhonenumber()
    })
    it('Test 030:Company - UI - SignupPage - MobileNumberwithspace8chr - Testcase-Negative', () => {
        const Signup = new SignupPage()
        Signup.EnterCompanyName('BRIDGEUP TECH PRIVATE LIMITED')
        Signup.EnterEmail(Validuseridtestcase30)
        Signup.EnterPassword(ValidPassword) 
        Signup.ClickContinue()
        Signup.EnterFirstName('BRIDGEUP') 
        Signup.EnterLastName('TESTING')
        Signup.ClearPhonenumber()
        Signup.EnterDesignation('Aoto$12&')
        Signup.EnterPhonenumber('        ')
        Signup.CheckIAccept()
        Signup.ClickSignUp()
        Signup.VerifyInvalidPhonenumber()
    })
    it('Test 031:Company - UI - SignupPage - MobileNumberwithSPLchr - Testcase-Negative', () => {
        const Signup = new SignupPage()
        Signup.EnterCompanyName('BRIDGEUP TECH PRIVATE LIMITED')
        Signup.EnterEmail(Validuseridtestcase31)
        Signup.EnterPassword(ValidPassword) 
        Signup.ClickContinue()
        Signup.EnterFirstName('BRIDGEUP') 
        Signup.EnterLastName('TESTING')
        Signup.EnterDesignation('Aoto$12&')
        Signup.EnterPhonenumber('63*(7946&7')
        Signup.CheckIAccept()
        Signup.ClickSignUp()
        Signup.VerifyInvalidPhonenumber()
    })
    it('Test 032:Company - UI - SignupPage - MobileNumberwithTxT - Testcase-Negative', () => {
        const Signup = new SignupPage()
        Signup.EnterCompanyName('BRIDGEUP TECH PRIVATE LIMITED')
        Signup.EnterEmail(Validuseridtestcase32)
        Signup.EnterPassword(ValidPassword) 
        Signup.ClickContinue()
        Signup.EnterFirstName('BRIDGEUP') 
        Signup.EnterLastName('TESTING')
        Signup.EnterDesignation('Aoto$12&')
        Signup.EnterPhonenumber('mobilenbr')
        Signup.CheckIAccept()
        Signup.ClickSignUp()
        Signup.VerifyInvalidPhonenumber()
    })
    it('Test 033:Company - UI - SignupPage - DesignationwithSpace5Char - Testcase-Negative', () => {
        const Signup = new SignupPage()
        Signup.EnterCompanyName('BRIDGEUP TECH PRIVATE LIMITED')
        Signup.EnterEmail(Validuseridtestcase33)
        Signup.EnterPassword(ValidPassword)
        Signup.ClickContinue()
        Signup.EnterFirstName('BRIDGEUP') 
        Signup.EnterLastName('TESTING')
        Signup.EnterDesignation('     ')
        Signup.EnterPhonenumber('916381794677')
        Signup.CheckIAccept()
        Signup.ClickSignUp()
        Signup.VerifyGetToKnowYou()
    })
    it('Test 034:Company - UI - SignupPage - Designationnumeric - Testcase-Negative', () => {
        const Signup = new SignupPage()
        Signup.EnterCompanyName('BRIDGEUP TECH PRIVATE LIMITED')
        Signup.EnterEmail(Validuseridtestcase34)
        Signup.EnterPassword(ValidPassword)
        Signup.ClickContinue()
        Signup.EnterFirstName('BRIDGEUP') 
        Signup.EnterLastName('TESTING')
        Signup.EnterDesignation('123456')
        Signup.EnterPhonenumber('916381794677')
        Signup.CheckIAccept()
        Signup.ClickSignUp()
        Signup.VerifyGetToKnowYou()
    })
});
